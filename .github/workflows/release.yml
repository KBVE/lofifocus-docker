name: Build and Publish Docker Package
on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  install:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['18', '20']
    name: Install using Node v${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        #working-directory: app
        run: |
          yarn install
        env:
          CI: true

  cloudfunction:
    needs: [install]
    runs-on: ubuntu-latest
    name: Deploy cloud functions to Appwrite
    steps:
      -   name: Checkout the code
          uses: actions/checkout@v3
      -   name: Install Appwrite CLI
          shell: bash
          working-directory: ./cloud/update-api-profile
          run: curl -sL https://appwrite.io/cli/install.sh | bash
      -   name: Setup Appwrite CLI
          shell: bash
          working-directory: ./cloud/update-api-profile
          run: |
            appwrite client \
              --endpoint='https://ap.kbve.com/v1' \
              --projectId='6436a6dc9a6b48db802f' \
              --key='${{ secrets.APPWRITE_API }}'
            appwrite -v
            appwrite functions createDeployment \
              --functionId='64ec2f906524e458c14b' \
              --entrypoint='index.js' \
              --code '.' \
              --activate true
      
  publish:
    needs: [cloudfunction]
    runs-on: ubuntu-latest
    name: Publish image to Github Packages
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}